version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: chatbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpass}
    networks:
      - chatbot-network
    healthcheck:  
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: chatbot-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file: 
      - ./backend/.env
    volumes:
      - ./database:/app/database
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      args:
        # ✅ URLs pour le navigateur (côté client)
        - VITE_API_URL=http://localhost:5000/api/v1
        - VITE_WS_URL=ws://localhost:5000
    container_name: chatbot-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - chatbot-network

networks:
  chatbot-network:
    driver: bridge

volumes:
  redis_data:
    driver: local