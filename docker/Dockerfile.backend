# docker/Dockerfile.backend
FROM node:18-alpine AS builder

RUN apk add --no-cache python3 make g++ sqlite

WORKDIR /app

COPY backend/package*.json ./
RUN npm ci

COPY backend/ ./
RUN npm run build 2>/dev/null || true

# ════════════════════════════════════════════════════════════
# Stage de production
# ════════════════════════════════════════════════════════════
FROM node:18-alpine

ARG NODE_ENV=production

RUN apk add --no-cache python3 make g++ sqlite curl

WORKDIR /app

# ⚠️ Supprimer ou commenter ces lignes sur la création de l'utilisateur
# RUN addgroup -g 1001 -S nodejs && \
#     adduser -S nodejs -u 1001

COPY backend/package*.json ./
RUN npm ci --only=production

COPY --from=builder /app/src ./src
COPY --from=builder /app/server.js ./server.js

# Créer les dossiers
RUN mkdir -p /app/database /app/uploads /app/logs

ENV NODE_ENV=production
ENV PORT=5000

# ✅ COMMENTER CETTE LIGNE - C'EST TOUT !
# USER nodejs

EXPOSE 5000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

CMD ["node", "server.js"]