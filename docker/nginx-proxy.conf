events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               image/svg+xml;

    # Upstreams
    upstream backend {
        server backend:5000;
    }

    upstream frontend {
        server frontend:80;
    }

    # ============================================
    # UN SEUL SERVER : PORT 80
    # Frontend + Backend API sur le même domaine
    # ============================================
    server {
        listen 80;
        server_name _;

        # Security headers (communs)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # ========================================
        # BACKEND API : /api/*
        # ========================================
        location /api/ {
            # Proxy vers le backend
            proxy_pass http://backend/api/;
            proxy_http_version 1.1;
            
            # Headers proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            
            # Timeout pour les longues requêtes
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            
            # Pas de cache pour l'API
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
        }

        # ========================================
        # WEBSOCKET : /ws
        # ========================================
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Timeout long pour websocket
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # ========================================
        # HEALTH CHECK
        # ========================================
        location /health {
            proxy_pass http://backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            access_log off;
        }

        # ========================================
        # FRONTEND : Tout le reste
        # ========================================
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            
            # Headers proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            
            # ❌ SUPPRIMÉ : try_files ne fonctionne PAS avec proxy_pass
            # Le try_files est géré par le nginx du conteneur frontend
        }

        # Deny hidden files
        location ~ /\. {
            deny all;
        }
    }
}